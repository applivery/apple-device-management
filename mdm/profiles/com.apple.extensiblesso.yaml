title: Extensible Single Sign-On
description: Configures an app extension to handle SSO.
payload:
  payloadtype: com.apple.extensiblesso
  supportedOS:
    iOS:
      introduced: '13.0'
      multiple: true
      supervised: false
      allowmanualinstall: false
      sharedipad:
        mode: allowed
        devicechannel: false
        userchannel: true
      userenrollment:
        mode: allowed
    macOS:
      introduced: '10.15'
      multiple: true
      devicechannel: true
      userchannel: true
      requiresdep: false
      userapprovedmdm: true
      allowmanualinstall: false
      userenrollment:
        mode: allowed
    tvOS:
      introduced: n/a
    visionOS:
      introduced: '1.1'
      multiple: true
      supervised: false
      allowmanualinstall: false
      userenrollment:
        mode: allowed
    watchOS:
      introduced: n/a
  content: Configures an app extension that performs SSO on behalf of certain URLs.
    User channel support was added in macOS 11.0.
payloadkeys:
- key: ExtensionIdentifier
  type: <string>
  presence: required
  content: The bundle identifier of the app extension that performs SSO for the specified
    URLs.
- key: TeamIdentifier
  supportedOS:
    iOS:
      introduced: n/a
  type: <string>
  presence: optional
  content: The team identifier of the app extension. This key is required on macOS
    and ignored elsewhere.
- key: Type
  type: <string>
  presence: required
  rangelist:
  - Credential
  - Redirect
  content: The type of SSO.
- key: Realm
  type: <string>
  presence: optional
  content: The realm name for 'Credential' payloads. Use proper capitalization for
    this value. Ignored for 'Redirect' payloads.
- key: ExtensionData
  type: <dictionary>
  presence: optional
  content: A dictionary of arbitrary data passed through to the app extension.
  subkeys:
  - key: ANY
    type: <any>
    presence: optional
    content: Keys and values to pass to the app extension.
- key: URLs
  type: <array>
  presence: optional
  content: |-
    An array of URL prefixes of identity providers where the app extension performs SSO.
    Required for 'Redirect' payloads. Ignored for 'Credential' payloads.
    The URLs need to begin with 'http://' or 'https://'.
    The system:
    * Matches scheme and host name case-insensitively
    * Doesn't allow query parameters and URL fragments
    * Requires that the URLs of all installed Extensible SSO payloads are unique
  subkeys:
  - key: URL
    type: <string>
    presence: required
    content: An http or https URL prefix.
- key: Hosts
  type: <array>
  presence: optional
  content: |-
    An array of host or domain names that apps can authenticate through the app extension.
    Required for 'Credential' payloads. Ignored for 'Redirect' payloads.
    The system:
    * Matches host or domain names case-insensitively
    * Requires that all the host and domain names of all installed Extensible SSO payloads are unique
    Host names that begin with a “.” are wildcard suffixes that match all subdomains; otherwise the host name needs be an exact match.
  subkeys:
  - key: hostname
    type: <string>
    presence: required
    content: A host or domain name, with or without a leading dot.
- key: ScreenLockedBehavior
  supportedOS:
    iOS:
      introduced: '15.0'
    macOS:
      introduced: '12.0'
  type: <string>
  presence: optional
  rangelist:
  - Cancel
  - DoNotHandle
  default: Cancel
  content: If set to 'Cancel', the system cancels authentication requests when the
    screen is locked. If set to 'DoNotHandle', the request continues without SSO instead.
    This doesn't apply to requests where 'userInterfaceEnabled' is 'false', or for
    background NSURLSession requests. Available in iOS 15 and later, and macOS 12
    and later.
- key: DeniedBundleIdentifiers
  supportedOS:
    iOS:
      introduced: '15.0'
    macOS:
      introduced: '12.0'
  type: <array>
  presence: optional
  content: An array of bundle identifiers of apps that don't use SSO provided by this
    extension. Available in iOS 15 and later, and macOS 12 and later.
  subkeys:
  - key: bundleIdentifier
    type: <string>
    presence: required
    content: The bundle identifier of the app.
- key: AuthenticationMethod
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '13.0'
      deprecated: '14.0'
  type: <string>
  presence: optional
  rangelist:
  - Password
  - UserSecureEnclaveKey
  content: The Platform SSO authentication method the extension uses. Requires that
    the SSO Extension also supports the method. Available in macOS 13 and later, and
    deprecated in macOS 14.
- key: RegistrationToken
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '13.0'
  type: <string>
  presence: optional
  content: The token this device uses for registration with Platform SSO. Use it for
    silent registration with the Identity Provider. Requires that 'PlatformSSO.AuthenticationMethod'
    isn't empty. Available in macOS 13 and later.
- key: PlatformSSO
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '14.0'
  type: <dictionary>
  presence: optional
  content: The dictionary to configure Platform SSO.
  subkeys:
  - key: AuthenticationMethod
    type: <string>
    presence: optional
    rangelist:
    - Password
    - UserSecureEnclaveKey
    - SmartCard
    content: The Platform SSO authentication method to use with the extension. Requires
      that the SSO Extension also support the method.
  - key: UseSharedDeviceKeys
    supportedOS:
      macOS:
        userchannel: false
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the system uses the same signing and encryption keys for all
      users. Only supported on the device channel.
  - key: AccountDisplayName
    type: <string>
    presence: optional
    content: The display name for the account in notifications and authentication
      requests.
  - key: LoginFrequency
    type: <integer>
    presence: optional
    range:
      min: 3600
    default: 64800
    content: The duration, in seconds, until the system requires a full login instead
      of a refresh. The default value is 64,800 (18 hours). The minimum value is 3600
      (1 hour).
  - key: EnableCreateUserAtLogin
    type: <boolean>
    presence: optional
    default: false
    content: Enables creating new users at the login window with an 'AuthenticationMethod'
      of either 'Password' or 'SmartCard'. Requires that 'UseSharedDeviceKeys' is
      'true'.
  - key: EnableAuthorization
    type: <boolean>
    presence: optional
    default: false
    content: Enables using identity provider accounts at authorization prompts. Requires
      that 'UseSharedDeviceKeys' is 'true'. The system assigns groups using 'AdministratorGroups',
      'AdditionalGroups', or 'AuthorizationGroups'.
  - key: TokenToUserMapping
    type: <dictionary>
    presence: optional
    content: The attribute mapping to use when creating new users or for authorization.
    subkeys:
    - key: AccountName
      type: <string>
      presence: optional
      content: The claim name to use for the user's account name.
    - key: FullName
      type: <string>
      presence: optional
      content: The claim name to use for the user's full name.
  - key: NewUserAuthorizationMode
    type: <string>
    presence: optional
    rangelist:
    - Standard
    - Admin
    - Groups
    content: |-
      The permission to apply to newly created accounts at login. Allowed values:

      * 'Standard': The account is a standard user.
      * 'Admin': The system adds the account to the local administrators group.
      * 'Groups': The system assigns group to the account using 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.
  - key: UserAuthorizationMode
    type: <string>
    presence: optional
    rangelist:
    - Standard
    - Admin
    - Groups
    content: |-
      The permission to apply to an account each time the user authenticates. Allowed values:

      * 'Standard': The account is a standard user.
      * 'Admin': The system adds the account to the local administrators group.
      * 'Groups': The system assigns group to the account using 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.
  - key: AdministratorGroups
    type: <array>
    presence: optional
    content: The list of groups to use for administrator access. The system requests
      membership during authentication.
    subkeys:
    - key: Group
      type: <string>
      presence: optional
      content: The group name.
  - key: AdditionalGroups
    type: <array>
    presence: optional
    content: The list of created groups that don't have administrator access.
    subkeys:
    - key: Group
      type: <string>
      presence: optional
      content: The group name.
  - key: AuthorizationGroups
    type: <dictionary>
    presence: optional
    content: The pairing of Authorization Rights to group names. The system updates
      the Authorization Right to use the group when used.
    subkeys:
    - key: ANY
      type: <string>
      presence: optional
      content: The key is an access right value, the value is the group to be associated
        with that access right.
